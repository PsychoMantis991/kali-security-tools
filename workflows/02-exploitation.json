{
  "name": "02-exploitation",
  "nodes": [
    {
      "parameters": {
        "path": "exploitation",
        "options": {}
      },
      "id": "webhook",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [200, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Configurar parámetros de explotación\nconst data = items[0].json;\n\n// Validar datos de entrada\nif (!data.target) {\n  throw new Error('Target is required');\n}\n\n// Configurar parámetros por defecto\nconst config = {\n  target: data.target,\n  intensity: data.intensity || 'medium',\n  enum_file: `/home/kali/kali-security-tools/temp/enum_${data.target.replace(/\\./g, '_')}.json`,\n  output_file: `/home/kali/kali-security-tools/temp/exploit_${data.target.replace(/\\./g, '_')}.json`\n};\n\nreturn [{\n  json: config\n}];"
      },
      "id": "configure-exploit",
      "name": "Configure Exploit Parameters",
      "type": "n8n-nodes-base.code",
      "position": [400, 200],
      "typeVersion": 2
    },
    {
      "parameters": {
        "command": "cd /home/kali/kali-security-tools && python3 scripts/exploit.py \"{{$json.target}}\" --enum {{$json.enum_file}} --output {{$json.output_file}}",
        "options": {
          "captureOutput": true
        }
      },
      "id": "run-exploitation",
      "name": "Run Exploitation",
      "type": "n8n-nodes-base.executeCommand",
      "position": [600, 200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Procesar resultados de explotación\nconst result = items[0].json;\n\n// Extraer información relevante\nconst exploits = result.exploits || [];\nconst vulnerabilities = result.vulnerabilities || [];\n\n// Clasificar vulnerabilidades por severidad\nconst severityCounts = {\n  critical: 0,\n  high: 0,\n  medium: 0,\n  low: 0,\n  info: 0\n};\n\nvulnerabilities.forEach(vuln => {\n  const severity = vuln.severity?.toLowerCase() || 'info';\n  severityCounts[severity]++;\n});\n\n// Generar reporte\nconst report = {\n  target: result.target,\n  timestamp: result.timestamp,\n  summary: {\n    total_exploits: exploits.length,\n    total_vulnerabilities: vulnerabilities.length,\n    severity_breakdown: severityCounts\n  },\n  findings: {\n    exploits: exploits.map(exp => ({\n      tool: exp.tool,\n      target: exp.target || result.target,\n      success: exp.success || false,\n      details: exp.output\n    })),\n    vulnerabilities: vulnerabilities.map(vuln => ({\n      name: vuln.name || vuln.template || 'Unknown',\n      severity: vuln.severity || 'info',\n      description: vuln.description || '',\n      location: vuln.location || '',\n      details: vuln.details || {}\n    }))\n  },\n  recommendations: [\n    severityCounts.critical > 0 ? 'Revisar y parchear vulnerabilidades críticas inmediatamente' : null,\n    severityCounts.high > 0 ? 'Priorizar la corrección de vulnerabilidades de alta severidad' : null,\n    severityCounts.medium > 0 ? 'Planificar la corrección de vulnerabilidades de severidad media' : null,\n    exploits.length > 0 ? 'Investigar y mitigar los exploits exitosos' : null\n  ].filter(Boolean)\n};\n\nreturn [{\n  json: report\n}];"
      },
      "id": "generate-report",
      "name": "Generate Exploitation Report",
      "type": "n8n-nodes-base.code",
      "position": [800, 200],
      "typeVersion": 2
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Configure Exploit Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configure Exploit Parameters": {
      "main": [
        [
          {
            "node": "Run Exploitation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run Exploitation": {
      "main": [
        [
          {
            "node": "Generate Exploitation Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
} 